package com.election.backendjava.entities;

import java.time.LocalDateTime;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import org.hibernate.annotations.CreationTimestamp;

/**
 * Entity class representing a post in the system.
 * This class is mapped to the "Post" table in the database using Hibernate.
 */
@Entity
@Table(name = "post")
public class Post {

    /**
     * The unique ID of the post, automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int id;

    /**
     * The title of the post.
     */
    @Column(name = "title", nullable = false)
    @NotBlank(message = "Post must be provided with a title")
    private String title;

    /**
     * The body of the post.
     */
    @Column(name = "body", nullable = false)
    @NotBlank(message = "Post must be provided with a body")
    private String body;

    /**
     * The date and time the post was created.
     */
    @Column(name = "date", nullable = false, updatable = false)
    @CreationTimestamp
    private LocalDateTime dateTime;

    /**
     * The user who created the post.
     */
    @ManyToOne
    @JoinColumn(name = "userId", referencedColumnName = "id")
    private User userId;

    // Constructors
    /**
     * Default constructor for the post.
     */
    public Post(){}

    /**
     * Constructor for the post with a title and body.
     * @param userId The user who created the post.
     * @param title The title of the post.
     * @param body The body of the post.
     */
    public Post(User userId, String title, String body){
        this.userId = userId;
        this.title = title;
        this.body = body;
        this.dateTime = LocalDateTime.now();
    }

    // Getter en Setter
    /**
     * Gets the unique ID of the post.
     * @return the post ID
     */
    public int getId(){
        return id;
    }

    /**
     * Gets the title of the post.
     * @return the post title
     */
    public String getTitle(){
        return title;
    }

    /**
     * Sets the title of the post.
     * @param title the post title to set
     */
    public void setTitle(String title){
        this.title = title;
    }

    /**
     * Gets the user who created the post.
     * @return the user who created the post
     */
    public User getUserId(){
        return userId;
    }

    /**
     * Sets the user who created the post.
     * @param userId the user who created the post
     */
    public void setUserId(User userId){
        this.userId = userId;
    }

    /**
     * Gets the body of the post.
     * @return the post body
     */
    public String getBody(){
        return body;
    }

    /**
     * Sets the body of the post.
     * @param body the post body to set
     */
    public void setBody(String body){
        this.body = body;
    }

    /**
     * Gets the date and time the post was created.
     * @return the date and time the post was created
     */
    public LocalDateTime getDateTime(){
        return dateTime;
    }
}
